{"ast":null,"code":"const URL = \"http://localhost:8000\"; // Load planets and return as JSON.\n\nasync function httpGetPlanets() {\n  const response = fetch(`${URL}/planets`);\n  return (await response).json();\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${URL}/launch`);\n  return (await response).json(); // const fetchedLaunches = await response.json();\n  // fetchedLaunches.sort((a,b) => {\n  //   return a.flightNumber - b.flightNumber\n  // })\n} // Submit given launch data to launch system.\n\n\nasync function httpSubmitLaunch(launch) {\n  fetch(`${URL}/launch`, {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(launch)\n  });\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/siddharth/Practise/First Phase/node/NASA-Project/client/src/hooks/requests.js"],"names":["URL","httpGetPlanets","response","fetch","json","httpGetLaunches","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","httpAbortLaunch","id"],"mappings":"AAEA,MAAMA,GAAG,GAAG,uBAAZ,C,CAEA;;AACA,eAAeC,cAAf,GAAgC;AAC9B,QAAMC,QAAQ,GAAGC,KAAK,CAAE,GAAEH,GAAI,UAAR,CAAtB;AACA,SAAO,CAAC,MAAME,QAAP,EAAiBE,IAAjB,EAAP;AACD,C,CAED;;;AACA,eAAeC,eAAf,GAAiC;AAC7B,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,SAAR,CAA5B;AACA,SAAO,CAAC,MAAME,QAAP,EAAiBE,IAAjB,EAAP,CAF6B,CAG7B;AACA;AACA;AACA;AACH,C,CAED;;;AACA,eAAeE,gBAAf,CAAgCC,MAAhC,EAAwC;AACtCJ,EAAAA,KAAK,CAAE,GAAEH,GAAI,SAAR,EAAkB;AACrBQ,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFY;AAKrBC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALgB,GAAlB,CAAL;AAOD;;AAED,eAAeM,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEb,cADF,EAEEI,eAFF,EAGEC,gBAHF,EAIEO,eAJF","sourcesContent":["\n\nconst URL = \"http://localhost:8000\"\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = fetch(`${URL}/planets`);\n  return (await response).json()\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n    const response = await fetch(`${URL}/launch`);\n    return (await response).json();\n    // const fetchedLaunches = await response.json();\n    // fetchedLaunches.sort((a,b) => {\n    //   return a.flightNumber - b.flightNumber\n    // })\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  fetch(`${URL}/launch`, {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body:JSON.stringify(launch)\n  })\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}